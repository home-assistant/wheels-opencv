name: Build wheels

on:
  workflow_dispatch:
  release:
    types:
      - published
  pull_request:
    branches:
      - master
    paths:
      - "requirements.txt"

jobs:
  build:
    name: Build wheels for musllinux_1_2 cp310 (${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - i386
          - armhf
          - armv7
          - aarch64
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2.3.4

      - name: Enable testing
        id: testing
        run: |
          testing="true"
          if [[ "${{ github.event_name  }}" =~ release|workflow_dispatch ]]; then
            testing="false"
          fi
          echo "::set-output name=testing::${testing}"

      - name: ENV opencv-python
        run: |
          set -xe

          echo "ENABLE_HEADLESS=1" > .env_file
          echo "CI_BUILD=1" >> .env_file
          #if [[ "${{ matrix.arch }}" =~ arm ]]; then
          #  echo 'CMAKE_ARGS="-DENABLE_NEON=OFF -DCPU_BASELINE_REQUIRE="' >> .env_file
          #fi
          if [ "${{ matrix.arch }}" = "i386" ]; then
            echo "NPY_DISABLE_SVML=1" >> .env_file
          fi

          #echo 'CMAKE_ARGS=-DENABLE_LTO=ON -DBUILD_EXAMPLES=OFF"' >> .env_file

          # Fix not working patch with pip
          #if [[ "${{ matrix.arch }}" =~ (arm|i386) ]]; then
          #  patch -d opencv-python -p0 < opencv-python/patches/patchOpenEXR
          #  vim -e -c 'g/patches\/patchOpenEXR/.-1,.d' -c 'wq' opencv-python/setup.py
          #fi

          # Fix git
          #vim -e -c \
          #  "%s/package_version, build_contrib, build_headless = get_and_set_info(\_.\{-})/package_version, build_contrib, build_headless = (\"${version##*=}\", False, True)/" \
          #  -c 'wq' opencv-python/setup.py
          #rm -rf opencv-python/.git

      - name: Build wheels
        uses: home-assistant/wheels@2022.06.6
        with:
          abi: cp310
          tag: musllinux_1_2
          arch: ${{ matrix.arch }}
          wheels-key: ${{ secrets.WHEELS_KEY }}
          apk: "blas-dev;eigen-dev;ffmpeg-dev;freetype-dev;glew-dev;harfbuzz-dev;hdf5-dev;lapack-dev;libdc1394-dev;libgphoto2-dev;libtbb-dev;mesa-dev;openexr-dev;openjpeg-dev;openjpeg-tools;openssl-dev"
          requirements: "requirements.txt"
          test: ${{ steps.testing.outputs.testing }}
          env-file: true

